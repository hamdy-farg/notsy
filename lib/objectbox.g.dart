// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'features/payment_management/data/models/payment_local_models/category_local_model.dart';
import 'features/payment_management/data/models/payment_local_models/payment_local_info_model.dart';
import 'features/payment_management/data/models/payment_local_models/person_local_model.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
    id: const obx_int.IdUid(1, 6420331599651958668),
    name: 'CategoryLocalModel',
    lastPropertyId: const obx_int.IdUid(10, 8047184986126990777),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 2965915122947146),
        name: 'id',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 6728531053535541664),
        name: 'name',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 3779686883364740820),
        name: 'cost',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(7, 4700928738641708438),
        name: 'description',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(10, 8047184986126990777),
        name: 'originalColorValue',
        type: 9,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[
      obx_int.ModelBacklink(
        name: 'payments',
        srcEntity: 'PaymentInfoLocalModel',
        srcField: '',
      ),
    ],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(2, 4401135258923804491),
    name: 'PaymentInfoLocalModel',
    lastPropertyId: const obx_int.IdUid(14, 561571178383847306),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 8188247300524978103),
        name: 'id',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 5262847613753833115),
        name: 'date',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 46941973628084947),
        name: 'description',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(8, 6969957882130757003),
        name: 'paymentMethod',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(9, 3451276106949479052),
        name: 'colorValue',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(10, 5782381024188522524),
        name: 'paymentStatus',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(11, 9166463856410089179),
        name: 'amountPaid',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(12, 6250028849790838016),
        name: 'quantity',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(13, 8567404068171779626),
        name: 'categoryId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(1, 6291433111087711359),
        relationTarget: 'CategoryLocalModel',
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(14, 561571178383847306),
        name: 'personId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(2, 7798925566780937235),
        relationTarget: 'PersonLocalModel',
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(3, 9099206626091174092),
    name: 'PersonLocalModel',
    lastPropertyId: const obx_int.IdUid(4, 4329073757361443825),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 3687521591040980755),
        name: 'id',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 2396441027020439167),
        name: 'name',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 699422220847866024),
        name: 'phoneNumber',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 4329073757361443825),
        name: 'latestUpdateAt',
        type: 10,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[
      obx_int.ModelBacklink(
        name: 'payments',
        srcEntity: 'PaymentInfoLocalModel',
        srcField: '',
      ),
    ],
  ),
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore({
  String? directory,
  int? maxDBSizeInKB,
  int? maxDataSizeInKB,
  int? fileMode,
  int? maxReaders,
  bool queriesCaseSensitiveDefault = true,
  String? macosApplicationGroup,
}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(
    getObjectBoxModel(),
    directory: directory ?? (await defaultStoreDirectory()).path,
    maxDBSizeInKB: maxDBSizeInKB,
    maxDataSizeInKB: maxDataSizeInKB,
    fileMode: fileMode,
    maxReaders: maxReaders,
    queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
    macosApplicationGroup: macosApplicationGroup,
  );
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
    entities: _entities,
    lastEntityId: const obx_int.IdUid(3, 9099206626091174092),
    lastIndexId: const obx_int.IdUid(2, 7798925566780937235),
    lastRelationId: const obx_int.IdUid(2, 1034562958712804097),
    lastSequenceId: const obx_int.IdUid(0, 0),
    retiredEntityUids: const [],
    retiredIndexUids: const [],
    retiredPropertyUids: const [
      7406303197173765578,
      4904786589903045449,
      2171641816419615243,
      7649954701181082518,
      8002286578458877461,
      3480966842126916344,
      6280263842091853691,
      4576909031677871237,
      3094619609554494469,
    ],
    retiredRelationUids: const [7121663207257609299, 1034562958712804097],
    modelVersion: 5,
    modelVersionParserMinimum: 5,
    version: 1,
  );

  final bindings = <Type, obx_int.EntityDefinition>{
    CategoryLocalModel: obx_int.EntityDefinition<CategoryLocalModel>(
      model: _entities[0],
      toOneRelations: (CategoryLocalModel object) => [],
      toManyRelations: (CategoryLocalModel object) => {
        obx_int.RelInfo<PaymentInfoLocalModel>.toOneBacklink(
          13,
          object.id,
          (PaymentInfoLocalModel srcObject) => srcObject.category,
        ): object.payments,
      },
      getId: (CategoryLocalModel object) => object.id,
      setId: (CategoryLocalModel object, int id) {
        object.id = id;
      },
      objectToFB: (CategoryLocalModel object, fb.Builder fbb) {
        final nameOffset = object.name == null
            ? null
            : fbb.writeString(object.name!);
        final descriptionOffset = object.description == null
            ? null
            : fbb.writeString(object.description!);
        final originalColorValueOffset = object.originalColorValue == null
            ? null
            : fbb.writeString(object.originalColorValue!);
        fbb.startTable(11);
        fbb.addInt64(0, object.id);
        fbb.addOffset(1, nameOffset);
        fbb.addFloat64(4, object.cost);
        fbb.addOffset(6, descriptionOffset);
        fbb.addOffset(9, originalColorValueOffset);
        fbb.finish(fbb.endTable());
        return object.id;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final nameParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 6);
        final costParam = const fb.Float64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          12,
        );
        final descriptionParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 16);
        final originalColorValueParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 22);
        final object = CategoryLocalModel(
          name: nameParam,
          cost: costParam,
          description: descriptionParam,
          originalColorValue: originalColorValueParam,
        )..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
        obx_int.InternalToManyAccess.setRelInfo<CategoryLocalModel>(
          object.payments,
          store,
          obx_int.RelInfo<PaymentInfoLocalModel>.toOneBacklink(
            13,
            object.id,
            (PaymentInfoLocalModel srcObject) => srcObject.category,
          ),
        );
        return object;
      },
    ),
    PaymentInfoLocalModel: obx_int.EntityDefinition<PaymentInfoLocalModel>(
      model: _entities[1],
      toOneRelations: (PaymentInfoLocalModel object) => [
        object.category,
        object.person,
      ],
      toManyRelations: (PaymentInfoLocalModel object) => {},
      getId: (PaymentInfoLocalModel object) => object.id,
      setId: (PaymentInfoLocalModel object, int id) {
        object.id = id;
      },
      objectToFB: (PaymentInfoLocalModel object, fb.Builder fbb) {
        final descriptionOffset = object.description == null
            ? null
            : fbb.writeString(object.description!);
        final paymentMethodOffset = object.paymentMethod == null
            ? null
            : fbb.writeString(object.paymentMethod!);
        final colorValueOffset = object.colorValue == null
            ? null
            : fbb.writeString(object.colorValue!);
        final paymentStatusOffset = object.paymentStatus == null
            ? null
            : fbb.writeString(object.paymentStatus!);
        fbb.startTable(15);
        fbb.addInt64(0, object.id);
        fbb.addInt64(3, object.date?.millisecondsSinceEpoch);
        fbb.addOffset(4, descriptionOffset);
        fbb.addOffset(7, paymentMethodOffset);
        fbb.addOffset(8, colorValueOffset);
        fbb.addOffset(9, paymentStatusOffset);
        fbb.addFloat64(10, object.amountPaid);
        fbb.addFloat64(11, object.quantity);
        fbb.addInt64(12, object.category.targetId);
        fbb.addInt64(13, object.person.targetId);
        fbb.finish(fbb.endTable());
        return object.id;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final dateValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          10,
        );
        final paymentMethodParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 18);
        final amountPaidParam = const fb.Float64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          24,
        );
        final colorValueParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 20);
        final paymentStatusParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 22);
        final quantityParam = const fb.Float64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          26,
        );
        final dateParam = dateValue == null
            ? null
            : DateTime.fromMillisecondsSinceEpoch(dateValue);
        final descriptionParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 12);
        final object = PaymentInfoLocalModel(
          paymentMethod: paymentMethodParam,
          amountPaid: amountPaidParam,
          colorValue: colorValueParam,
          paymentStatus: paymentStatusParam,
          quantity: quantityParam,
          date: dateParam,
          description: descriptionParam,
        )..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
        object.category.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          28,
          0,
        );
        object.category.attach(store);
        object.person.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          30,
          0,
        );
        object.person.attach(store);
        return object;
      },
    ),
    PersonLocalModel: obx_int.EntityDefinition<PersonLocalModel>(
      model: _entities[2],
      toOneRelations: (PersonLocalModel object) => [],
      toManyRelations: (PersonLocalModel object) => {
        obx_int.RelInfo<PaymentInfoLocalModel>.toOneBacklink(
          14,
          object.id,
          (PaymentInfoLocalModel srcObject) => srcObject.person,
        ): object.payments,
      },
      getId: (PersonLocalModel object) => object.id,
      setId: (PersonLocalModel object, int id) {
        object.id = id;
      },
      objectToFB: (PersonLocalModel object, fb.Builder fbb) {
        final nameOffset = object.name == null
            ? null
            : fbb.writeString(object.name!);
        final phoneNumberOffset = object.phoneNumber == null
            ? null
            : fbb.writeString(object.phoneNumber!);
        fbb.startTable(5);
        fbb.addInt64(0, object.id);
        fbb.addOffset(1, nameOffset);
        fbb.addOffset(2, phoneNumberOffset);
        fbb.addInt64(3, object.latestUpdateAt?.millisecondsSinceEpoch);
        fbb.finish(fbb.endTable());
        return object.id;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final latestUpdateAtValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          10,
        );
        final nameParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 6);
        final phoneNumberParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 8);
        final object =
            PersonLocalModel(name: nameParam, phoneNumber: phoneNumberParam)
              ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
              ..latestUpdateAt = latestUpdateAtValue == null
                  ? null
                  : DateTime.fromMillisecondsSinceEpoch(latestUpdateAtValue);
        obx_int.InternalToManyAccess.setRelInfo<PersonLocalModel>(
          object.payments,
          store,
          obx_int.RelInfo<PaymentInfoLocalModel>.toOneBacklink(
            14,
            object.id,
            (PaymentInfoLocalModel srcObject) => srcObject.person,
          ),
        );
        return object;
      },
    ),
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [CategoryLocalModel] entity fields to define ObjectBox queries.
class CategoryLocalModel_ {
  /// See [CategoryLocalModel.id].
  static final id = obx.QueryIntegerProperty<CategoryLocalModel>(
    _entities[0].properties[0],
  );

  /// See [CategoryLocalModel.name].
  static final name = obx.QueryStringProperty<CategoryLocalModel>(
    _entities[0].properties[1],
  );

  /// See [CategoryLocalModel.cost].
  static final cost = obx.QueryDoubleProperty<CategoryLocalModel>(
    _entities[0].properties[2],
  );

  /// See [CategoryLocalModel.description].
  static final description = obx.QueryStringProperty<CategoryLocalModel>(
    _entities[0].properties[3],
  );

  /// See [CategoryLocalModel.originalColorValue].
  static final originalColorValue = obx.QueryStringProperty<CategoryLocalModel>(
    _entities[0].properties[4],
  );

  /// see [CategoryLocalModel.payments]
  static final payments =
      obx.QueryBacklinkToMany<PaymentInfoLocalModel, CategoryLocalModel>(
        PaymentInfoLocalModel_.category,
      );
}

/// [PaymentInfoLocalModel] entity fields to define ObjectBox queries.
class PaymentInfoLocalModel_ {
  /// See [PaymentInfoLocalModel.id].
  static final id = obx.QueryIntegerProperty<PaymentInfoLocalModel>(
    _entities[1].properties[0],
  );

  /// See [PaymentInfoLocalModel.date].
  static final date = obx.QueryDateProperty<PaymentInfoLocalModel>(
    _entities[1].properties[1],
  );

  /// See [PaymentInfoLocalModel.description].
  static final description = obx.QueryStringProperty<PaymentInfoLocalModel>(
    _entities[1].properties[2],
  );

  /// See [PaymentInfoLocalModel.paymentMethod].
  static final paymentMethod = obx.QueryStringProperty<PaymentInfoLocalModel>(
    _entities[1].properties[3],
  );

  /// See [PaymentInfoLocalModel.colorValue].
  static final colorValue = obx.QueryStringProperty<PaymentInfoLocalModel>(
    _entities[1].properties[4],
  );

  /// See [PaymentInfoLocalModel.paymentStatus].
  static final paymentStatus = obx.QueryStringProperty<PaymentInfoLocalModel>(
    _entities[1].properties[5],
  );

  /// See [PaymentInfoLocalModel.amountPaid].
  static final amountPaid = obx.QueryDoubleProperty<PaymentInfoLocalModel>(
    _entities[1].properties[6],
  );

  /// See [PaymentInfoLocalModel.quantity].
  static final quantity = obx.QueryDoubleProperty<PaymentInfoLocalModel>(
    _entities[1].properties[7],
  );

  /// See [PaymentInfoLocalModel.category].
  static final category =
      obx.QueryRelationToOne<PaymentInfoLocalModel, CategoryLocalModel>(
        _entities[1].properties[8],
      );

  /// See [PaymentInfoLocalModel.person].
  static final person =
      obx.QueryRelationToOne<PaymentInfoLocalModel, PersonLocalModel>(
        _entities[1].properties[9],
      );
}

/// [PersonLocalModel] entity fields to define ObjectBox queries.
class PersonLocalModel_ {
  /// See [PersonLocalModel.id].
  static final id = obx.QueryIntegerProperty<PersonLocalModel>(
    _entities[2].properties[0],
  );

  /// See [PersonLocalModel.name].
  static final name = obx.QueryStringProperty<PersonLocalModel>(
    _entities[2].properties[1],
  );

  /// See [PersonLocalModel.phoneNumber].
  static final phoneNumber = obx.QueryStringProperty<PersonLocalModel>(
    _entities[2].properties[2],
  );

  /// See [PersonLocalModel.latestUpdateAt].
  static final latestUpdateAt = obx.QueryDateProperty<PersonLocalModel>(
    _entities[2].properties[3],
  );

  /// see [PersonLocalModel.payments]
  static final payments =
      obx.QueryBacklinkToMany<PaymentInfoLocalModel, PersonLocalModel>(
        PaymentInfoLocalModel_.person,
      );
}
